/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.distributorEnterprise;

import business.Business;
import business.enterprise.DistributorEnterprise;
import business.enterprise.Enterprise;
import static business.enterprise.Enterprise.EnterpriseType.DistributorEnterprise;
import business.enterprise.EnterpriseDirectory;
import business.enterprise.MedicalEnterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.medicalenterpriseOrganizations.ProviderManagementOrganization;
import business.organization.useraccount.UserAccount;
import business.organization.work.BillingWorkRequestToProviderByDistributor;
import business.organization.work.VaccineWorkRequest;
import business.organization.work.WorkRequest;
import business.site.siteVaccineOrder.VaccineOrder;
import business.site.siteVaccineOrder.VaccineOrderItem;
import business.utility.SendEmail;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harshil
 */
public class DistributorWorkRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DistributorWorkRequestsJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Network network;
    private Enterprise enterprise;
    private Organization organization;
    private Business business;
    
    
    private DistributorEnterprise distributorEnterprise;
    
    
    
    private EnterpriseDirectory medicalEnterpriseDirectory;
    private MedicalEnterprise medicalEnterprise;
    
    
    
    public DistributorWorkRequestsJPanel(JPanel userProcessContainer,UserAccount userAccount,Network network,Enterprise enterprise,Organization organization,Business business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.network = network;
        this.enterprise = enterprise;
        this.distributorEnterprise = (DistributorEnterprise)enterprise;
        this.organization = organization;
        this.business = business;
        
        
        populateWorkRequestTable();
        
    }

    
    
    
    public void populateWorkRequestTable()
    {
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        dtm.setRowCount(0);
        Organization organization = distributorEnterprise;
        {
            if (organization instanceof DistributorEnterprise)
            {
                for(WorkRequest wr:organization.getWorkQueue().getWorkRequestList())
                {
                    if(wr instanceof VaccineWorkRequest)
                    {
                        VaccineWorkRequest vwtp = (VaccineWorkRequest)wr;
                        Object row[] = new Object[7];
                        row[0] = wr;
                        row[1] = wr.getOriginalSender();
                        row[2] = wr.getRequestDate();
                        row[3] = wr.getSenderUserAccount();
                        row[4] = wr.getReceivingUserAccount();
                        row[5] = wr.getStatus();
                        row[6] = vwtp.getVaccineOrder();
                        dtm.addRow(row);
                    }
                }
            }
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnViewOrder = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVaccineRequest = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnBack2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setText("Distributor Work Requests");

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Request ID", "Original Sender", "TimeStamp", "Sender", "Receiver", "Status", "Vaccine Order ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        btnAssignToMe.setBackground(new java.awt.Color(102, 102, 255));
        btnAssignToMe.setText("Assign To Me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnViewOrder.setBackground(new java.awt.Color(102, 102, 255));
        btnViewOrder.setText("View Order");
        btnViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderActionPerformed(evt);
            }
        });

        btnProcess.setBackground(new java.awt.Color(102, 102, 255));
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        tblVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Vaccine Quantity Request", "Total Vaccine Price"
            }
        ));
        jScrollPane2.setViewportView(tblVaccineRequest);

        jLabel2.setText("Distributor Organization Work Queue");

        btnBack2.setBackground(new java.awt.Color(102, 102, 255));
        btnBack2.setText("<< Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(72, 72, 72)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnAssignToMe, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(btnViewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(btnProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssignToMe)
                    .addComponent(btnViewOrder)
                    .addComponent(btnProcess))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack2)
                .addContainerGap(290, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        // TODO add your handling code here:

        int selectedRow = workRequestJTable.getSelectedRow();

        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a Row:");
            return;
        }
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);

        if(request.getStatus().equalsIgnoreCase(WorkRequest.StatusType.Forwarded.getValue()))
        {
            Organization org = null;
            for (Organization organization : distributorEnterprise.getOrganizationDirectory().getOrganizationList()){
                if (organization instanceof DistributorEnterprise){
                    org = organization;
                    break;
                }
            }
            if (org!=null){
                org.getWorkQueue().getWorkRequestList().add(request);

            }
        }
        request.setReceivingUserAccount(userAccount);
        request.setStatus(WorkRequest.StatusType.Pending.getValue());
        populateWorkRequestTable();
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateWorkRequestTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderActionPerformed
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel)tblVaccineRequest.getModel();
        dtm.setRowCount(0);
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a Row:");
            return;
        }
        VaccineOrder vaccineOrder = (VaccineOrder)workRequestJTable.getValueAt(selectedRow,6);

        for(VaccineOrderItem vaccineOrderItem:vaccineOrder.getVaccineOrderItemList())
        {
            Object row[] = new Object[3];
            row[0] = vaccineOrderItem.getVaccine();
            row[1] = vaccineOrderItem.getQuantity();
            row[2] = vaccineOrderItem.getVaccinePrice() * vaccineOrderItem.getQuantity();
            dtm.addRow(row);
        }
    }//GEN-LAST:event_btnViewOrderActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:

        /*
        BillingWorkRequestToProviderByDistributor billingRequest = new BillingWorkRequestToProviderByDistributor();
        
        billingRequest.setSenderUserAccount(userAccount);
       // billingRequest.setWorkRequestType(WorkRequest.WorkRequestType.BillingWorkRequestToProviderByDistributor.getValue());
        billingRequest.setVaccineOrder(request.getVaccineOrder());
        billingRequest.setStatus("Billing Information");
        //BillingWorkRequestToProviderByDistributor billingRequest1;
        
        
        //billingRequest1 = (BillingWorkRequestToProviderByDistributor)workRequestJTable.getValueAt(selectedRow, 0);
       
        
        
        medicalEnterpriseDirectory = network.getAllMedicalEnterprise();
        for(Enterprise de:medicalEnterpriseDirectory.getEnterpriseList())
        {
            if(de instanceof MedicalEnterprise)
            {
                medicalEnterprise = (MedicalEnterprise)de;
            }
        }
        

        Organization org = null;
        for (Organization organization :medicalEnterprise.getOrganizationDirectory().getOrganizationList() ){
            if (organization instanceof ProviderManagementOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(billingRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(billingRequest);
            billingRequest.getVaccineOrder().setVaccineOrderStatus(WorkRequest.StatusType.VaccineRequested.getValue());
        }
        
        
        
        
        */
        
        
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a Row:");
            return;
        }

        VaccineWorkRequest request = (VaccineWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        
       
        
        
        
        
        
        
     
        if(request.getReceivingUserAccount().equals(userAccount))
        {
            request.setStatus(WorkRequest.StatusType.Disptached.getValue());

       // sendRequestToDistributor();

     //   Organization org = distributorEnterprise;

        //Organization org = null;
        // for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList() ){
            //   if (organization instanceof DPHEnterprise){
                //     org = organization;
                //   break;
                //  }
            //  }

       // if (org!=null){

         //   org.getWorkQueue().getWorkRequestList().add(request);
            // userAccount.getWorkQueue().getWorkRequestList().add(request);
            
            request.getVaccineOrder().setVaccineOrderStatus(WorkRequest.StatusType.Completed.getValue());
            request.setSenderUserAccount(userAccount);
            request.setStatus(WorkRequest.StatusType.Completed.getValue());
            
            
            UserAccount ua = request.getOriginalSender();
            
            String temp = ua.getEmployee().getContact().getEmailId();
            System.out.println(temp);
            
            String message="Congratulations, Vaccine Work Request is Approved and is Completed. Shipments of Vaccines will be reached within 2 Business Days";
        SendEmail.SendEmail(temp,"vACCINE REQUEST APPROVED", message);
            populateWorkRequestTable();
            JOptionPane.showMessageDialog(null,"Vaccine Work Request is Approved and is Completed. Shipments of Vaccines will be reached within 2 Business Days:");

        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself and then process");
        }
            
//        }

        /*
        ProcessVaccineWorkRequestToProviderJPanel processVaccineWorkRequestToProviderJPanel = new ProcessVaccineWorkRequestToProviderJPanel(userProcessContainer,userAccount,network,enterprise,enterpriseOrganization,business,request);
        userProcessContainer.add("ProcessVaccineWorkRequestToProviderJPanel", processVaccineWorkRequestToProviderJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        */
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnViewOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblVaccineRequest;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
