/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.medicalEnterprise;

import business.Business;
import business.enterprise.DPHEnterprise;
import business.enterprise.Enterprise;
import business.enterprise.EnterpriseDirectory;
import business.enterprise.MedicalEnterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.medicalenterpriseOrganizations.ProviderManagementOrganization;
import business.organization.useraccount.UserAccount;
import business.organization.work.VaccineWorkRequest;
import business.organization.work.WorkRequest;
import business.site.siteVaccineOrder.VaccineOrder;
import business.site.siteVaccineOrder.VaccineOrderItem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harshil
 */
public class ProviderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProviderJPanel
     */
    
    private JPanel userProcessContainer;
    private Network network;
    private Enterprise enterprise;
    private MedicalEnterprise medicalEnterprise;
    private Organization enterpriseOrganization;
    private UserAccount userAccount;
    private Business business;
    
    private EnterpriseDirectory dphEnterpriseDirectory;
    private DPHEnterprise dphEnterprise;
    
    
    
    public ProviderJPanel(JPanel userProcessContainer, UserAccount userAccount, Network network, Enterprise enterprise,Organization enterpriseOrganization, Business business) {
        initComponents();
        
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.enterprise = enterprise;
        this.medicalEnterprise = (MedicalEnterprise)enterprise;
        this.enterpriseOrganization = enterpriseOrganization;
        
      
        
        
        populateWorkRequestTable();
    }
    
    
    
    public void populateWorkRequestTable()
    {
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        dtm.setRowCount(0);
        for (Organization organization: medicalEnterprise.getOrganizationDirectory().getOrganizationList())
        {
            if (organization instanceof ProviderManagementOrganization)
            {
                for(WorkRequest wr:organization.getWorkQueue().getWorkRequestList())
                {
                    if(wr instanceof VaccineWorkRequest)
                    {
                        VaccineWorkRequest vwtp = (VaccineWorkRequest)wr;
                        Object row[] = new Object[7];
                        row[0] = wr;
                        row[1] = wr.getOriginalSender();
                        row[2] = wr.getRequestDate();
                        row[3] = wr.getSenderUserAccount().getUsername();
                        row[4] = wr.getReceivingUserAccount();
                        row[5] = wr.getStatus();
                        row[6] = vwtp.getVaccineOrder();
                        dtm.addRow(row);
                    }
                }
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        btnViewOrder = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVaccineRequest = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Provider Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 11, -1, -1));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Request ID", "Original Sender", "TimeStamp", "Sender", "Receiver", "Status", "Vaccine Order ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 1110, 91));

        btnAssignToMe.setBackground(new java.awt.Color(102, 102, 255));
        btnAssignToMe.setText("Assign To Me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });
        add(btnAssignToMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 170, -1));

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 170, -1));

        btnProcess.setBackground(new java.awt.Color(102, 102, 255));
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 170, -1));

        btnViewOrder.setBackground(new java.awt.Color(102, 102, 255));
        btnViewOrder.setText("View Order");
        btnViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderActionPerformed(evt);
            }
        });
        add(btnViewOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 160, -1));

        tblVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Vaccine Quantity Request", "Total Vaccine Price"
            }
        ));
        jScrollPane2.setViewportView(tblVaccineRequest);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 580, 100));

        jLabel2.setText("Provider Organizations Work Queue:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        // TODO add your handling code here:

        int selectedRow = workRequestJTable.getSelectedRow();

        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a Row:");
            return;
        }
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);

        if(request.getStatus().equalsIgnoreCase(WorkRequest.StatusType.VaccineRequested.getValue()))
        {
            Organization org = null;
            for (Organization organization : medicalEnterprise.getOrganizationDirectory().getOrganizationList()){
                if (organization instanceof ProviderManagementOrganization){
                    org = organization;
                    break;
                }
            }
            if (org!=null){
                org.getWorkQueue().getWorkRequestList().add(request);
            }
        }
        request.setReceivingUserAccount(userAccount);
        request.setStatus(WorkRequest.StatusType.Pending.getValue());
        populateWorkRequestTable();
        
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateWorkRequestTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            
            JOptionPane.showMessageDialog(null,"Please select a Row:");
            return;
        }

        VaccineWorkRequest request = (VaccineWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getReceivingUserAccount().equals(userAccount))
        {
            request.setStatus(WorkRequest.StatusType.InProcess.getValue());
        
            populateWorkRequestTable();
        
            sendRequestToDPH();
       
            Organization org = dphEnterprise;
        
//        for (Organization organization : dphEnterprise.getOrganizationDirectory()){
//            if (organization instanceof DPHEnterprise){
//                org = organization;
//                break;
//            }
       // }
            if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            //userAccount.getWorkQueue().getWorkRequestList().add(request);
            request.getVaccineOrder().setVaccineOrderStatus(WorkRequest.StatusType.Forwarded.getValue());
            request.setSenderUserAccount(userAccount);
            request.setStatus(WorkRequest.StatusType.Forwarded.getValue());
            
            JOptionPane.showMessageDialog(null,"Vaccine Work Request is Forwarded to DPHEnterprise Admin:");
            populateWorkRequestTable();
            }
            
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself and then process");
        }
        
        
       /* 
        ProcessVaccineWorkRequestToProviderJPanel processVaccineWorkRequestToProviderJPanel = new ProcessVaccineWorkRequestToProviderJPanel(userProcessContainer,userAccount,network,enterprise,enterpriseOrganization,business,request);
        userProcessContainer.add("ProcessVaccineWorkRequestToProviderJPanel", processVaccineWorkRequestToProviderJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
               */
               
    }//GEN-LAST:event_btnProcessActionPerformed

    private void sendRequestToDPH()
    {
        String tempName = network.getParentNetwork().getNetworkName();
        System.out.println(tempName);
        Network network1 = network.getParentNetwork();
        
        dphEnterpriseDirectory = network1.getAllDPHEnterprise();
        
        for(Enterprise de:dphEnterpriseDirectory.getEnterpriseList())
        {
            if(de instanceof DPHEnterprise)
            {
                dphEnterprise = (DPHEnterprise)de;
            }
        }
        
    }
    
    
    
    private void btnViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderActionPerformed
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel)tblVaccineRequest.getModel();
        dtm.setRowCount(0);
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow < 0)
            return;
       
        VaccineOrder vaccineOrder = (VaccineOrder)workRequestJTable.getValueAt(selectedRow,6);
        
        for(VaccineOrderItem vaccineOrderItem:vaccineOrder.getVaccineOrderItemList())
        {
                        Object row[] = new Object[3];
                        row[0] = vaccineOrderItem.getVaccine();
                        row[1] = vaccineOrderItem.getQuantity();
                        row[2] = vaccineOrderItem.getVaccinePrice() * vaccineOrderItem.getQuantity();
                        dtm.addRow(row);
        }
                
    }//GEN-LAST:event_btnViewOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnViewOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblVaccineRequest;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
