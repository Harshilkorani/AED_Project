/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import business.Business;
import business.enterprise.Enterprise;
import business.enterprise.MedicalEnterprise;
import business.organization.Organization;
import business.organization.useraccount.UserAccount;
import business.site.Site;
import business.utility.Validation;
import business.vaccineEcoSystem.VaccineEcoSystem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harshil
 */
public class AdminManageOrganizationsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminManageOrganizationsJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private VaccineEcoSystem vaccineEcoSystem;
    
    
    public AdminManageOrganizationsJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Business business) {
        initComponents();
        
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.vaccineEcoSystem = business.getVaccineEcoSystem();
        
        populateFormFields();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblWelcome = new javax.swing.JLabel();
        lblEnterpriseOrNode = new javax.swing.JLabel();
        lblOrganizationDirectory = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrganization = new javax.swing.JTable();
        lblOrganizationType = new javax.swing.JLabel();
        jComboBoxOrganizationType = new javax.swing.JComboBox();
        lblOrganizationName = new javax.swing.JLabel();
        txtOrganizationName = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));

        btnBack.setBackground(new java.awt.Color(102, 102, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblWelcome.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcome.setText("Welcome");

        lblEnterpriseOrNode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEnterpriseOrNode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnterpriseOrNode.setText("EnterpriseOrNode");

        lblOrganizationDirectory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrganizationDirectory.setText("Organization Directory");

        tblOrganization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Type", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrganization);

        lblOrganizationType.setText("Organization Type");

        jComboBoxOrganizationType.setBackground(new java.awt.Color(102, 102, 255));
        jComboBoxOrganizationType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxOrganizationType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOrganizationTypeActionPerformed(evt);
            }
        });

        lblOrganizationName.setText("*Organization Name");

        btnCreate.setBackground(new java.awt.Color(102, 102, 255));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 726, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnBack)
                            .addGap(465, 465, 465)
                            .addComponent(lblWelcome))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(280, 280, 280)
                            .addComponent(lblEnterpriseOrNode))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(280, 280, 280)
                            .addComponent(lblOrganizationDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(220, 220, 220)
                            .addComponent(lblOrganizationType)
                            .addGap(32, 32, 32)
                            .addComponent(jComboBoxOrganizationType, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(220, 220, 220)
                            .addComponent(lblOrganizationName)
                            .addGap(23, 23, 23)
                            .addComponent(txtOrganizationName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(220, 220, 220)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnBack)
                        .addComponent(lblWelcome))
                    .addGap(17, 17, 17)
                    .addComponent(lblEnterpriseOrNode)
                    .addGap(3, 3, 3)
                    .addComponent(lblOrganizationDirectory)
                    .addGap(6, 6, 6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(70, 70, 70)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblOrganizationType)
                        .addComponent(jComboBoxOrganizationType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblOrganizationName)
                        .addComponent(txtOrganizationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(30, 30, 30)
                    .addComponent(btnCreate)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateFormFields()
    {
        lblEnterpriseOrNode.setText(organization.getOrganizationName());
        lblWelcome.setText("Welcome "+userAccount.getEmployee().getPerson().getFirstName()+" !");
        
        jComboBoxOrganizationType.removeAllItems();
        if(organization.getOrganizationType().equalsIgnoreCase(Organization.OrganizationType.Enterprise.getValue()))
        {
            /*
            if(organization instanceof Enterprise)
            {
              for(Organization.OrganizationType type:Organization.OrganizationType.values())
              {
                  jComboBoxOrganizationType.addItem(type.getValue());
              }
            }
            */
           
            //else
             if(organization instanceof MedicalEnterprise)     
            {
              for(Organization.MedicalEnterpriseOrganizationType type:Organization.MedicalEnterpriseOrganizationType.values())
              {
                  jComboBoxOrganizationType.addItem(type.getValue());
              }
            } 
                  
        }
        /*else if(organization.getOrganizationType().equalsIgnoreCase(Organization.OrganizationType.Site.getValue()))
        {
            for(Organization.OrganizationType type: Organization.OrganizationType.values())
              {
                  jComboBoxOrganizationType.addItem(type.getValue());
              }
        }
        */
        
    }
    
    
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        Organization newOrganization=null;
        
        if(Validation.validateTextFieldsForNonEmpty(txtOrganizationName))
        {
            if(organization instanceof Enterprise)
            {
                Enterprise ent=(Enterprise)organization;
                if(ent.getEnterpriseType().equalsIgnoreCase(Enterprise.EnterpriseType.MedicalEnterprise.getValue()))
                {

                    MedicalEnterprise medicalEnterprise = (MedicalEnterprise)organization;
                    newOrganization = medicalEnterprise.getOrganizationDirectory().createOrganization(getSelectedOrganizationType(), txtOrganizationName.getText());

                }
            }
            else if(organization instanceof Site)
            {
                Site site=(Site)organization;
                newOrganization =site.getSiteOrganizationDirectory().createOrganization(getSelectedOrganizationType(), txtOrganizationName.getText());
            }
        
        
            if(newOrganization!=null)
            {
                JOptionPane.showMessageDialog(null,"SuccessFull","Successfull", JOptionPane.INFORMATION_MESSAGE);
                populateTable();
                txtOrganizationName.setText("");

            }
            
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please enter Organization Name:");
        }
            populateTable();

    }//GEN-LAST:event_btnCreateActionPerformed

    private void jComboBoxOrganizationTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOrganizationTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxOrganizationTypeActionPerformed

    
    private void populateTable()
        {
            DefaultTableModel model = (DefaultTableModel) tblOrganization.getModel();
            model.setRowCount(0);
            
            if(organization.getOrganizationType().equalsIgnoreCase(Organization.OrganizationType.Enterprise.getValue()))
            {
                Enterprise enterprise=(Enterprise)organization;
               for(Organization subOrganization:enterprise.getOrganizationDirectory().getOrganizationList())
               {
                Object[] row=new Object[3];
                
                row[0]=subOrganization;
                row[1]=subOrganization.getOrganizationType();
                row[2]=subOrganization.getOrganizationName();
                model.addRow(row);
               }
            }
            else if(organization.getOrganizationType().equalsIgnoreCase(Organization.OrganizationType.Site.getValue()))
            {
                
               Site site =(Site)organization;
               for(Organization subOrganization:site.getSiteOrganizationDirectory().getOrganizationList())
               {
                Object[] row=new Object[3];
                row[0]=subOrganization;
                row[1]=subOrganization.getOrganizationType();
                row[2]=subOrganization.getOrganizationName();
                model.addRow(row);
               }
                
            }
        }
    
    
    
    private Organization.OrganizationType getSelectedOrganizationType()
    {
        for(Organization.OrganizationType type: Organization.OrganizationType.values())
        {
            if(jComboBoxOrganizationType.getSelectedItem().toString().equalsIgnoreCase(type.getValue()))
            {
                return type;
            }
        }
        return null;
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox jComboBoxOrganizationType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEnterpriseOrNode;
    private javax.swing.JLabel lblOrganizationDirectory;
    private javax.swing.JLabel lblOrganizationName;
    private javax.swing.JLabel lblOrganizationType;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JTable tblOrganization;
    private javax.swing.JTextField txtOrganizationName;
    // End of variables declaration//GEN-END:variables
}
